swagger: "2.0"
info:
  description: "This is Bakergun Games backend server service users. Demo ReSTAPI on ðŸš€ [https://bakergun-backend-service-users.herokuapp.com](https://bakergun-backend-service-users.herokuapp.com) "
  version: "1.0.0"
  title: "ðŸŽ® Bakergun Backend Service Users"
host: "127.0.0.1:8080"
basePath: "/api/v1"
schemes:
- "http"
paths:
  /signup:
    post:
      tags:
      - "Sign Up"
      summary: "Add a new user"
      description: "create user game (register)"
      operationId: "registerUserGame"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "New user already add on Games"
        required: true
        schema:
          $ref: "#/definitions/SignUp"
      responses:
        "201":
          description: "Success create new user."
  /login:
    post:
      tags: 
      - "Login"
      summary: "Find user by username"
      description: "find user game (login)"
      operationId: "loginUserGame"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Login user"
        required: true
        schema:
          $ref: "#/definitions/Login"
      responses:
        "200":
          description: "Success create new user."
        "400":
          description: "Please fill form username, password, and email."
        "500":
          description: "Found error while sign up user."
  /user-game/{user_id}:
    get:
      tags: 
      - "User Game"
      summary: "Get one user by id"
      description: "get user game by id"
      operationId: "getUserGame"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "user_id"
        description: "ID of user_game to return"
        required: true
        type: "integer"
        format: "int64"
      - in: "header"
        name: "Authorization"
        description: "Tokens"
        required: true
        type: "string"
      responses:
        "200":
          description: "Success update user columns"
        "400":
          description: "Please fill form username, password, and email."
        "500":
          description: "Found error while sign up user."
    put:
      tags: 
      - "User Game"
      summary: "Update user by id"
      description: "update user game"
      operationId: "updateUserGame"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "user_id"
        description: "ID of user_game to return"
        required: true
        type: "integer"
        format: "int64"
      - in: "header"
        name: "Authorization"
        description: "Tokens"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Login user on Games"
        required: true
        schema:
          $ref: "#/definitions/UserGames"
      responses:
        "200":
          description: "Success update user columns"
        "400":
          description: "Please fill form username, password, and email."
        "500":
          description: "Found error while sign up user."
    delete:
      tags: 
      - "User Game"
      summary: "Delete one user by id"
      description: "delete user game by id"
      operationId: "deleteUserGame"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "user_id"
        description: "ID of user_game to return"
        required: true
        type: "integer"
        format: "int64"
      - in: "header"
        name: "Authorization"
        description: "Tokens"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Login user on Games"
        required: true
        schema:
          $ref: "#/definitions/UserGames"
      responses:
        "200":
          description: "Success delete user by {user_id}"
        "400":
          description: "Please fill form username, password, and email."
        "500":
          description: "Found error while sign up user."
  /user-game-biodata:
    post:    
      tags: 
      - "User Game Biodata"
      summary: "Create user game biodata"
      description: "create user game biodata"
      operationId: "createUserGameBiodata"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Authorization"
        description: "Tokens"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Login user on Games"
        required: true
        schema:
          $ref: "#/definitions/UserGameBiodata"
      responses:
        "200":
          description: "Success update user columns"
        "400":
          description: "Please fill form username, password, and email."
        "500":
          description: "Found error while sign up user."
  
  /user-game-history:
    post:    
      tags: 
      - "User Game History"
      summary: "Create user game history"
      description: "create user game history"
      operationId: "createUserGameHistory"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Authorization"
        description: "Tokens"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Create user game history"
        required: true
        schema:
          $ref: "#/definitions/UserGameHistory"
      responses:
        "200":
          description: "Success update user columns"
        "400":
          description: "Please fill form username, password, and email."
        "500":
          description: "Found error while sign up user."  
  
  /user-game-biodata/{user_game_biodata_id}:
    get:    
      tags: 
      - "User Game Biodata"
      summary: "get one user game biodata by id"
      description: "get one user game biodata by id"
      operationId: "getOneUserGameBiodata"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "user_game_biodata_id"
        description: "User Game Biodata ID"
        required: true
        type: "integer"
        format: "int64"
      - in: "header"
        name: "Authorization"
        description: "Tokens"
        required: true
        type: "string"
      responses:
        "200":
          description: "Success update user columns"
        "400":
          description: "Please fill form username, password, and email."
        "500":
          description: "Found error while sign up user."
          
    put:    
      tags: 
      - "User Game Biodata"
      summary: "Update user game biodata"
      description: "update user game biodata"
      operationId: "updateUserGameBiodata"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "user_game_biodata_id"
        description: "User Game Biodata ID"
        required: true
        type: "integer"
        format: "int64"
      - in: "header"
        name: "Authorization"
        description: "Tokens"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Login user on Games"
        required: true
        schema:
          $ref: "#/definitions/UserGameBiodata"
      responses:
        "200":
          description: "Success update user columns"
        "400":
          description: "Please fill form username, password, and email."
        "500":
          description: "Found error while sign up user."
    
    delete:    
      tags: 
      - "User Game Biodata"
      summary: "Delete user game biodata by ID"
      description: "delete user game biodata by ID"
      operationId: "deleteOneUserGameBiodata"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "user_game_biodata_id"
        description: "User Game Biodata ID"
        required: true
        type: "integer"
        format: "int64"
      - in: "header"
        name: "Authorization"
        description: "Tokens"
        required: true
        type: "string"
      responses:
        "200":
          description: "Success update user columns"
        "400":
          description: "Please fill form username, password, and email."
        "500":
          description: "Found error while sign up user."
  
  
  /user-game-history/{user_game_history_id}:
    get:    
      tags: 
      - "User Game History"
      summary: "get one user game history by id"
      description: "get one user game history by id"
      operationId: "getOneUserGameHistory"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "user_game_history_id"
        description: "User Game History ID"
        required: true
        type: "integer"
        format: "int64"
      - in: "header"
        name: "Authorization"
        description: "Tokens"
        required: true
        type: "string"
      responses:
        "200":
          description: "Success update user columns"
        "400":
          description: "Please fill form username, password, and email."
        "500":
          description: "Found error while sign up user."
          
    put:    
      tags: 
      - "User Game History"
      summary: "Update user game history"
      description: "update user game history"
      operationId: "updateUserGameHistory"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "user_game_history_id"
        description: "User Game History ID"
        required: true
        type: "integer"
        format: "int64"
      - in: "header"
        name: "Authorization"
        description: "Tokens"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Login user on Games"
        required: true
        schema:
          $ref: "#/definitions/UserGameHistory"
      responses:
        "200":
          description: "Success update user columns"
        "400":
          description: "Please fill form username, password, and email."
        "500":
          description: "Found error while sign up user."
    
    delete:    
      tags: 
      - "User Game History"
      summary: "Delete user game history by ID"
      description: "delete user game history by ID"
      operationId: "deleteOneUserGameHistory"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "user_game_history_id"
        description: "User Game History ID"
        required: true
        type: "integer"
        format: "int64"
      - in: "header"
        name: "Authorization"
        description: "Tokens"
        required: true
        type: "string"
      responses:
        "200":
          description: "Success update user columns"
        "400":
          description: "Please fill form username, password, and email."
        "500":
          description: "Found error while sign up user."
      
      
definitions:
  SignUp:
    type: "object"
    properties:
      username:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"

  Login:
    type: "object"
    properties:
      username:
        type: "string"
      password:
        type: "string"
        
  UserGames:
    type: "object"
    properties:
      username:
        type: "string"
      password:
        type: "string"
  
  UserGameBiodata:
    type: "object"
    properties:
      user_id:
        type: "number"  
      fullname:
        type: "string"
      sex:
        type: "string"
      jobs:
        type: "string"
  
  UserGameHistory:
    type: "object"
    properties:
      user_id:
        type: "number"  
      score:
        type: "string"
      comment:
        type: "string"